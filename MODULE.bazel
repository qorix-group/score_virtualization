# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************
module(
    name = "score_virtualization",
    version = "1.0",
)

bazel_dep(name = "rules_python", version = "1.0.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# PYTHON_VERSION = "3.12"

# python = use_extension("@rules_python//python/extensions:python.bzl", "python")
# python.toolchain(
#     is_default = True,
#     python_version = PYTHON_VERSION,
# )
# use_repo(python)

# pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
# pip.parse(
#     hub_name = "pip_score_venv_test",
#     python_version = PYTHON_VERSION,
#     requirements_lock = "//component_integration_tests/python_test_cases:requirements.txt",
# )
# use_repo(pip, "pip_score_venv_test")

# Add GoogleTest dependency
bazel_dep(name = "googletest", version = "1.14.0")

# Rust rules for Bazel
bazel_dep(name = "rules_rust", version = "0.61.0")

# Checker rule for CopyRight checks/fixs
bazel_dep(name = "score_cr_checker", version = "0.2.2")
bazel_dep(name = "score_python_basics", version = "0.3.4")
bazel_dep(name = "score_starpls_lsp", version = "0.1.0")

# C/C++ rules for Bazel
bazel_dep(name = "rules_cc", version = "0.1.1")

bazel_dep(name = "score_toolchains_gcc", version = "0.4", dev_dependency = True)

gcc = use_extension("@score_toolchains_gcc//extentions:gcc.bzl", "gcc", dev_dependency = True)
gcc.toolchain(
    sha256 = "457f5f20f57528033cb840d708b507050d711ae93e009388847e113b11bf3600",
    strip_prefix = "x86_64-unknown-linux-gnu",
    url = "https://github.com/eclipse-score/toolchains_gcc_packages/releases/download/0.0.1/x86_64-unknown-linux-gnu_gcc12.tar.gz",
)
use_repo(gcc, "gcc_toolchain", "gcc_toolchain_gcc")

# Dash license checker
bazel_dep(name = "score_dash_license_checker", version = "0.1.2")

# Format checker
bazel_dep(name = "score_format_checker", version = "0.1.1")
bazel_dep(name = "aspect_rules_lint", version = "1.0.3")
bazel_dep(name = "buildifier_prebuilt", version = "7.3.1")

bazel_dep(name = "rust_qnx8_toolchain", version = "1.2.0", dev_dependency = True)
archive_override(
    module_name = "rust_qnx8_toolchain",
    strip_prefix = "qnx8",
    urls = [
        "https://github.com/qorix-group/rust-lang-qnx8/releases/download/1.2.0/qnx8_rust_toolchain.tar.gz",
    ],
)

bazel_dep(name = "score_toolchains_rust", version = "0.1.1", dev_dependency = True)
git_override(
    module_name = "score_toolchains_rust",
    commit = "6651945b4ba8e7c342d9740e9cb2d37842f56261",
    remote = "https://github.com/eclipse-score/toolchains_rust.git",
)

bazel_dep(name = "score_toolchains_qnx", version = "0.0.2")
git_override(
    module_name = "score_toolchains_qnx",
    commit = "3477ac13a8015a4e2016588fba573c2f9519237d",
    remote = "https://github.com/eclipse-score/toolchains_qnx.git",
)

toolchains_qnx = use_extension("@score_toolchains_qnx//:extensions.bzl", "toolchains_qnx", dev_dependency = True)
toolchains_qnx.sdp(
    sha256 = "f2e0cb21c6baddbcb65f6a70610ce498e7685de8ea2e0f1648f01b327f6bac63",
    strip_prefix = "installation",
    url = "https://www.qnx.com/download/download/79858/installation.tgz",
)
use_repo(toolchains_qnx, "toolchains_qnx_sdp")
use_repo(toolchains_qnx, "toolchains_qnx_qcc")
use_repo(toolchains_qnx, "toolchains_qnx_ifs")

# Registers the custom Rust toolchain wired to @qnx_rust
register_toolchains(
    "@toolchains_qnx_qcc//:qcc_aarch64",
    "@score_toolchains_rust//toolchains/aarch64-unknown-qnx8_0:toolchain_aarch64_qnx8_0",
    "@score_toolchains_rust//toolchains/x86_64-unknown-linux-gnu:toolchain_x86_64_linux",
    dev_dependency = True,
)

register_toolchains(
    "@toolchains_qnx_ifs//:ifs_x86_64",
    "@toolchains_qnx_ifs//:ifs_aarch64",
    dev_dependency = True,
)

bazel_dep(name = "custom_qemu", version = "1.0.0", dev_dependency = True)
archive_override(
    module_name = "custom_qemu",
    integrity = "sha256-3V2d+p7nP0tsbrVWOPYUSJogLNal43CIAHEto6Vjdfg=",
    strip_prefix = "third_party",  # matches top-level dir in the tar
    urls = [
        "https://github.com/qorix-group/custom-qemu/releases/download/1.0.0/custom_qemu.tar.gz",
    ],
)

bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "score_bazel_platforms", version = "0.0.2")

